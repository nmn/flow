declare module "M" {
  declare var P: $Exports<'P'>;
  declare var N: $Exports<'M___N'>;
  declare var x: number;
  declare var y: string;
  declare var z: string;
  declare class C {
    y: typeof P.b;
    
  }
  declare var m: typeof N.z;
  
}
declare module "M___N" {
  declare var M: $Exports<'M'>;
  declare var x : typeof M.x;
  declare var y : typeof M.y;
  declare var C : typeof M.C;
  declare var m : typeof M.m;
  declare var z: typeof x;
  
}

declare module "P" {
  declare var M: $Exports<'M'>;
  declare var a: typeof M.N.z;
  declare var b: number;
  
}

declare module "F" {
  declare var M: $Exports<'M'>;
  declare function successor(n: typeof M.x): typeof M.x;
  
}

declare module "T" {
  declare var M: $Exports<'M'>;
  declare type AnyThing = number | string | M.C;
  declare function identity(x: AnyThing): AnyThing;
  
}

